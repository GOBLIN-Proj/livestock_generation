:py:mod:`livestock_generation.livestock_exports`
================================================

.. py:module:: livestock_generation.livestock_exports

.. autoapi-nested-parse::

   =====================
   Livestock Exports
   =====================
   This module contains a class to calculate exports of milk, protein, and total protein from a livestock system under different scenarios.

   The class `Exports` contains methods to calculate the total kilograms of milk exported for each scenario, the total beef weight exported
   from the entire system for each scenario, and the total protein exported by the entire system, assuming specific milk and beef protein contents.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   livestock_generation.livestock_exports.Exports




.. py:class:: Exports(ef_country, calibration_year, target_year, scenario_inputs_df)


   A class to calculate exports of milk, protein, and total protein from a livestock system under different scenarios.

   .. attribute:: sc_class

      An instance for fetching scenario data.

      :type: ScenarioDataFetcher

   .. attribute:: loader_class

      An instance for loading necessary data.

      :type: Loader

   .. attribute:: data_manager_class

      An instance for managing livestock data.

      :type: DataManager

   .. attribute:: ef_country

      The country code for export calculations.

      :type: str

   :param ef_country: The country code for which the exports are being calculated.
   :type ef_country: str
   :param calibration_year: The year used for calibration purposes in the analysis.
   :type calibration_year: int
   :param target_year: The year for which the exports are being calculated.
   :type target_year: int
   :param scenario_inputs_df: A pandas DataFrame containing scenario inputs necessary for calculations.
   :type scenario_inputs_df: DataFrame

   .. py:method:: compute_system_milk_exports(scenario_animal_data, baseline_animal_data)

      Calculates the total kilograms of milk exported for each scenario.

      :param scenario_animal_data: Animal data for different scenarios.
      :type scenario_animal_data: DataFrame
      :param baseline_animal_data: Baseline animal data.
      :type baseline_animal_data: DataFrame

      :returns: A DataFrame with index as scenarios and columns for total milk in kg.
      :rtype: DataFrame


   .. py:method:: compute_system_protien_exports(scenario_animal_data, baseline_animal_data)

      Calculates the total beef weight exported from the entire system for each scenario.

      :param scenario_animal_data: Animal data for different scenarios.
      :type scenario_animal_data: DataFrame
      :param baseline_animal_data: Baseline animal data.
      :type baseline_animal_data: DataFrame

      :returns: A DataFrame with index as scenarios and columns for carcass weight in kg and by beef systems.
      :rtype: DataFrame


   .. py:method:: compute_system_total_protein_exports(scenario_animal_data, baseline_animal_data)

      Calculates the total protein exported by the entire system, assuming specific milk and beef protein contents.

      :param scenario_animal_data: Animal data for different scenarios.
      :type scenario_animal_data: DataFrame
      :param baseline_animal_data: Baseline animal data.
      :type baseline_animal_data: DataFrame

      :returns: A DataFrame with index as scenarios and columns for total protein, milk protein, and beef protein in kg.
      :rtype: DataFrame



